<?xml version="1.0" encoding="UTF-8"?>
<xml-fragment xmlns:ser="http://www.bea.com/wli/sb/services" xmlns:tran="http://www.bea.com/wli/sb/transports" xmlns:env="http://www.bea.com/wli/config/env" xmlns:http="http://www.bea.com/wli/sb/transports/http" xmlns:con="http://www.bea.com/wli/sb/pipeline/config" xmlns:con1="http://www.bea.com/wli/sb/stages/transform/config" xmlns:con2="http://www.bea.com/wli/sb/stages/config" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ser:coreEntry isProxy="true" isEnabled="true">
    <ser:binding type="abstract XML"/>
    <ser:monitoring isEnabled="false">
      <ser:aggregationInterval>10</ser:aggregationInterval>
      <ser:pipelineMonitoringLevel>Pipeline</ser:pipelineMonitoringLevel>
    </ser:monitoring>
    <ser:reporting>true</ser:reporting>
    <ser:logging isEnabled="true">
      <ser:logLevel>debug</ser:logLevel>
    </ser:logging>
    <ser:sla-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:sla-alerting>
    <ser:pipeline-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:pipeline-alerting>
  </ser:coreEntry>
  <ser:endpointConfig>
    <tran:provider-id>http</tran:provider-id>
    <tran:inbound>true</tran:inbound>
    <tran:URI>
      <env:value>/AsyncCalloutPrivateWkmPS</env:value>
    </tran:URI>
    <tran:inbound-properties/>
    <tran:all-headers>true</tran:all-headers>
    <tran:provider-specific>
      <http:inbound-properties/>
      <http:dispatch-policy>WKM_Proxy</http:dispatch-policy>
    </tran:provider-specific>
  </ser:endpointConfig>
  <ser:router>
    <con:pipeline type="request" name="PipelinePairNode1_request">
      <con:stage name="stage1">
        <con:context/>
        <con:actions>
          <con1:wsCallout>
            <con2:id>_ActionId-1664299188040054585--4be7ab1c.15ad7b8a735.-7ee0</con2:id>
            <con1:service xsi:type="ref:BusinessServiceRef" ref="OSBThreadModelProject/v1/BS/WorkManagerBS" xmlns:ref="http://www.bea.com/wli/sb/reference"/>
            <con1:request>
              <con1:payload>$pythonRequest</con1:payload>
            </con1:request>
            <con1:response>
              <con1:payload>pythonResponse</con1:payload>
            </con1:response>
            <con1:requestTransform>
              <con1:routing-options>
                <con2:id>_ActionId-1664299188040054585--4be7ab1c.15ad7b8a735.-7ee1</con2:id>
                <con1:qualityOfService>best-effort</con1:qualityOfService>
              </con1:routing-options>
            </con1:requestTransform>
            <con1:responseTransform/>
          </con1:wsCallout>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="PipelinePairNode1_response">
      <con:stage name="stage1">
        <con:context/>
        <con:actions>
          <con1:replace varName="body" contents-only="true">
            <con2:id>_ActionId-5156221106714814166-52dd292d.15acd734e74.-7c77</con2:id>
            <con1:location>
              <con2:xpathText>.</con2:xpathText>
            </con1:location>
            <con1:expr>
              <con2:xqueryText>&lt;test>
  &lt;hello>{$pythonResponse/text()}&lt;/hello>
&lt;/test></con2:xqueryText>
            </con1:expr>
          </con1:replace>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:flow>
      <con:pipeline-node name="PipelinePairNode1">
        <con:request>PipelinePairNode1_request</con:request>
        <con:response>PipelinePairNode1_response</con:response>
      </con:pipeline-node>
    </con:flow>
  </ser:router>
</xml-fragment>